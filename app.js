// Import necessary modules
const express = require('express');
const app = express();
const nodemailer = require('nodemailer');
require('dotenv').config(); // Load environment variables from .env file

// Define the root route
app.get("/", (req, res) => {
    res.send('<h2>Server connected</h2>');
});

// Define the /helo route to send an email
app.get('/helo', (req, res) => {
    console.log("Endpoint '/helo' hit");

    // Fetch the contact email from environment variables
    const contactEmail = process.env.CONTACT_EMAIL;

    // Call sendMail function to send an email
    sendMail("Amit", "Hello", contactEmail);
    
    // Respond to the client
    res.send("Email sent successfully");
});

// Define the /test route
app.get("/test", (req, res) => {
    res.send('<h1>hello</h1>');
});

// Function to send an email
const sendMail = async (name, dec, email) => {
    try {
        // Log the email details to the console
        console.log(name, dec, email);

        // Create a transporter object using SMTP transport
        let transporter = nodemailer.createTransport({
            service: 'gmail',
            auth: {
                user: process.env.GMAIL_USER, // Fetch Gmail user from environment variables
                pass: process.env.GMAIL_PASS  // Fetch Gmail password from environment variables
            }
        });

        // Define the email options
        let mailOptions = {
            from: '"Lost and Found Portal" <pavan.sharma_cs21@gla.ac.in>', // Sender's name and email
            to: email, // Recipient's email
            subject: 'Item matched with your provided item.', // Subject of the email
            html: ` // HTML body of the email
                <!DOCTYPE html>
                <html lang="en">
                <head>
                    <meta charset="UTF-8">
                    <meta name="viewport" content="width=device-width, initial-scale=1.0">
                    <title>Notification</title>
                </head>
                <body style="font-family: Arial, sans-serif; background-color: #f8f9fa; text-align: center; padding: 20px;">
                    <div style="max-width: 600px; margin: 0 auto; background-color: #ffffff; padding: 20px; border-radius: 10px; box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);">
                        <h2 style="color: #007bff;">Notification</h2>
                        <p style="color: #495057;">Dear User,</p>
                        <p style="color: #495057;">The item you provided has been matched name: <strong style="color: #007bff;">${name}</strong></p>
                        <p style="color: #495057;">Description: <strong style="color: #007bff;">${dec}</strong></p>
                        <p style="color: #495057;">Visit Lost and Found Portal.</p>
                        <p style="color: #495057;">Thank you for using our service!</p>
                        <hr style="border: 1px solid #007bff;">
                        <p style="color: #868e96; font-size: 12px;">This email is autogenerated. Please do not reply.</p>
                    </div>
                </body>
                </html>
            `
        };

        // Send the email using the transporter object
        transporter.sendMail(mailOptions, function (error, info) {
            if (error) {
                // Log any errors that occur
                console.error(error);
            } else {
                // Log the response from the email server
                console.log('Email sent: ' + info.response);
            }
        });
    } catch (error) {
        // Log any errors that occur
        console.error(error);
    }
};

// Fetch the port number from environment variables
const port = process.env.PORT || 8080;

// Start the server and listen on the specified port
app.listen(port, () => {
    console.log(`Server connected at port ${port}`);
});
